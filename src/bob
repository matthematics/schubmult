Process Process-2:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-4:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-3:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-8:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-6:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-5:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-10:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-14:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-20:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-26:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-12:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-7:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-9:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-16:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-32:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-38:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
Process Process-50:
Process Process-79:
Process Process-18:
Process Process-11:
Process Process-71:
Process Process-74:
Process Process-72:
Process Process-81:
Traceback (most recent call last):
Process Process-77:
Process Process-76:
Process Process-22:
Process Process-85:
Process Process-75:
Process Process-84:
Process Process-83:
Traceback (most recent call last):
Traceback (most recent call last):
Exception ignored in: <function _releaseLock at 0x774fced8b560>
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/logging/__init__.py", line 237, in _releaseLock
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement
    def _releaseLock():
    
KeyboardInterrupt: 

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 337, in _exit_function
    _run_finalizers(0)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 303, in _run_finalizers
    finalizer()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 227, in __call__
    res = self._callback(*self._args, **self._kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 874, in _decref
    conn = _Client(token.address, authkey=authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
KeyboardInterrupt
Process Process-87:
Process Process-73:
Process Process-82:
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
Process Process-80:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 337, in _exit_function
    _run_finalizers(0)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 303, in _run_finalizers
    finalizer()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 227, in __call__
    res = self._callback(*self._args, **self._kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 874, in _decref
    conn = _Client(token.address, authkey=authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-78:
Process Process-86:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 16, in shared_cache_function
    shared_dict[key] = result
    ~~~~~~~~~~~^^^^^
  File "<string>", line 2, in __setitem__
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 821, in _callmethod
    conn.send((self._id, methodname, args, kwds))
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 206, in send
    self._send_bytes(_ForkingPickler.dumps(obj))
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/reduction.py", line 51, in dumps
    cls(buf, protocol).dump(obj)
_pickle.PicklingError: Can't pickle <class 'schubmult.rings.free_algebra.FreeAlgebraElement'>: it's not the same object as schubmult.rings.free_algebra.FreeAlgebraElement

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 337, in _exit_function
    _run_finalizers(0)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 303, in _run_finalizers
    finalizer()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 227, in __call__
    res = self._callback(*self._args, **self._kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 874, in _decref
    conn = _Client(token.address, authkey=authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 774, in answer_challenge
    response = connection.recv_bytes(256)        # reject large message
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-24:
Traceback (most recent call last):
Process Process-55:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 361, in ring_act
    wd_dict = elem.change_basis(WordBasis)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 256, in change_basis
    ret += v * new_ring.from_dict(tfunc(k))
           ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 217, in __rmul__
    return self.ring.rmul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 553, in rmul
    return self.from_dict({k: v * other for k, v in elem.items()})
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 553, in <dictcomp>
    return self.from_dict({k: v * other for k, v in elem.items()})
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-69:
Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
Process Process-66:
sympy.polys.polyerrors.CoercionFailed: Not a domain element
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 271, in mul
    other = self.domain_new(other)
            ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
sympy.polys.polyerrors.CoercionFailed: Could not coerce Sx((2, 1)) of type <class 'schubmult.rings.schubert_ring.DoubleSchubertElement'> to SingleSchubertRing

During handling of the above exception, another exception occurred:

Traceback (most recent call last):

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
Process Process-37:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 9, in shared_cache_function
    with lock:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 1056, in __enter__
    return self._callmethod('acquire')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 818, in _callmethod
    self._connect()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 805, in _connect
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Process Process-68:
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 172, in mul
    dct = _sep_desc_mul(perm1, perm2, deg1, deg2, v1 * v2, self.schub_ring)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 35, in _sep_desc_mul
    bingo = ring.from_dict({perm * pmu1: coeff}) * ring.from_dict({perm2 * pmu2: S.One})
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 276, in mul
    other = self._coerce_mul(other)
            ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/schubert_ring.py", line 722, in _coerce_mul
    def _coerce_mul(self, other):
    
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'
Process Process-19:
Traceback (most recent call last):
Traceback (most recent call last):

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 9, in shared_cache_function
    with lock:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 1056, in __enter__
    return self._callmethod('acquire')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 818, in _callmethod
    self._connect()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 805, in _connect
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 172, in mul
    dct = _sep_desc_mul(perm1, perm2, deg1, deg2, v1 * v2, self.schub_ring)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 31, in _sep_desc_mul
    pmu = uncode(bigmu)
          ^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 314, in uncode
    max_required = max([cd2[i] + i for i in range(len(cd2))])
                                            ^^^^^^^^^^^^^^^
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 9, in shared_cache_function
    with lock:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 1056, in __enter__
    return self._callmethod('acquire')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 818, in _callmethod
    self._connect()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 805, in _connect
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
sympy.polys.polyerrors.CoercionFailed: Not a domain element

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 150, in mul
    bongus = self.domain_new(elem1)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 222, in __str__
    return sstr(self)
           ^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 408, in __call__
    return self.__wrapped__(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 993, in sstr
    s = p.doprint(expr)
        ^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 57, in _sympystr
    return printer._print_Add(sympy_Add(*self.as_ordered_terms()))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 58, in _print_Add
    t = self._print(term)
        ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/abstract_schub_poly.py", line 111, in _sympystr
    return printer.doprint(f"{self._prefix}S{self._genset}({printer.doprint(key)})")
                                                            ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 332, in _print
    return printmethod(expr, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 867, in _print_tuple
    return "(%s)" % self.stringify(expr, ", ")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in stringify
    return sep.join([self.parenthesize(item, level) for item in args])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in <listcomp>
    return sep.join([self.parenthesize(item, level) for item in args])
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 39, in parenthesize
    return self._print(item)
           ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 139, in _sympystr
    return printer.doprint(self._perm)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 332, in _print
    return printmethod(expr, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 867, in _print_tuple
    return "(%s)" % self.stringify(expr, ", ")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in stringify
    return sep.join([self.parenthesize(item, level) for item in args])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in <listcomp>
    return sep.join([self.parenthesize(item, level) for item in args])
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 36, in parenthesize
    if (precedence(item) < level) or ((not strict) and precedence(item) <= level):
        ^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/precedence.py", line 131, in precedence
    for i in type(item).mro():
             ^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-35:
Process Process-67:
Traceback (most recent call last):
Process Process-13:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 810, in clone
    def clone(self, *args):
    
KeyboardInterrupt
Traceback (most recent call last):
Process Process-28:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'
Process Process-27:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/polys/domains/domain.py", line 379, in __call__
    def __call__(self, *args):
    
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
Process Process-64:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 9, in shared_cache_function
    with lock:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 1056, in __enter__
    return self._callmethod('acquire')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 818, in _callmethod
    self._connect()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 805, in _connect
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
sympy.polys.polyerrors.CoercionFailed: Not a domain element

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 943, in try_lr_module
    up_elem = ASx(uncode([perm.trimcode[0]]), 1) * elem
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 157, in mul
    bongus = self.domain_new(elem2)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 222, in __str__
    return sstr(self)
           ^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 408, in __call__
    return self.__wrapped__(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 993, in sstr
    s = p.doprint(expr)
        ^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 57, in _sympystr
    return printer._print_Add(sympy_Add(*self.as_ordered_terms()))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 64, in _print_Add
    if precedence(term) < prec or term.is_Add:
       ^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/precedence.py", line 135, in precedence
    elif n in PRECEDENCE_VALUES:
         ^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-65:
Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
sympy.polys.polyerrors.CoercionFailed: Not a domain element

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 157, in mul
    bongus = self.domain_new(elem2)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 222, in __str__
    return sstr(self)
           ^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 408, in __call__
    return self.__wrapped__(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 993, in sstr
    s = p.doprint(expr)
        ^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 57, in _sympystr
    return printer._print_Add(sympy_Add(*self.as_ordered_terms()))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 58, in _print_Add
    t = self._print(term)
        ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/abstract_schub_poly.py", line 111, in _sympystr
    return printer.doprint(f"{self._prefix}S{self._genset}({printer.doprint(key)})")
                                                            ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 332, in _print
    return printmethod(expr, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
Process Process-60:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 867, in _print_tuple
    return "(%s)" % self.stringify(expr, ", ")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in stringify
    return sep.join([self.parenthesize(item, level) for item in args])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in <listcomp>
    return sep.join([self.parenthesize(item, level) for item in args])
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 39, in parenthesize
    return self._print(item)
           ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 139, in _sympystr
    return printer.doprint(self._perm)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 332, in _print
    return printmethod(expr, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 867, in _print_tuple
    return "(%s)" % self.stringify(expr, ", ")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in stringify
    return sep.join([self.parenthesize(item, level) for item in args])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in <listcomp>
    return sep.join([self.parenthesize(item, level) for item in args])
    
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'
Traceback (most recent call last):

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 443, in clone
    return RCGraphModule(*args, generic_key_type=self._generic_key_type, ring=self._ring)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 449, in __init__
    super().__init__(*args, generic_key_type=generic_key_type, ring=ring, **kwargs)
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 102, in __init__
    start_dct = dict(*args)
                ^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 9, in shared_cache_function
    with lock:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 1056, in __enter__
    return self._callmethod('acquire')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 818, in _callmethod
    self._connect()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 805, in _connect
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-63:

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 9, in shared_cache_function
    with lock:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 1056, in __enter__
    return self._callmethod('acquire')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 818, in _callmethod
    self._connect()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 805, in _connect
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 9, in shared_cache_function
    with lock:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 1056, in __enter__
    return self._callmethod('acquire')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 818, in _callmethod
    self._connect()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 805, in _connect
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-61:
Traceback (most recent call last):
Process Process-15:
Process Process-70:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 276, in coproduct
    res += val * self.ring.coproduct_on_basis(key)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 532, in coproduct_on_basis
    return T.from_dict(self._basis.coproduct(key))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 729, in coproduct
    dct = cls.transition_word(*key)
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 847, in transition_word
    expr = Sx(perm * ~uncode(list(range(perm.inv + numvars, perm.inv, -1)))).in_SEM_basis().expand()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 49, in in_SEM_basis
    result += sympify(v) * schubpoly_from_elems(k, self.ring.genset, self.ring.coeff_genset, elem_func=self.ring.symbol_elem_func)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/schub_poly.py", line 70, in schubpoly_from_elems
    ) + s * sumval * elem_func_func(
                     ^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/schub_poly.py", line 20, in elem_func_func
    return elem_func(newk - vdiff, newk, varl1[1:], zvars)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/symmetric_polynomials/elem_sym.py", line 93, in __new__
    return FactorialElemSym.__xnew_cached__(cls, int(p), int(k), tuple(args[0]), tuple(args[1]))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/symmetric_polynomials/elem_sym.py", line 103, in __xnew_cached__
    return FactorialElemSym.__xnew__(_class, p, k, var1, var2)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/symmetric_polynomials/elem_sym.py", line 123, in __xnew__
    obj = ElemSym_base.__new__(
          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/cache.py", line 72, in wrapper
    retval = cfunc(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/function.py", line 450, in __new__
    return cls._new_(*args, **options)  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/function.py", line 456, in _new_
    if not cls._valid_nargs(n):
           ^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/function.py", line 265, in _valid_nargs
    def _valid_nargs(self, n : int) -> bool:
    
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 169, in __rmul__
    def __rmul__(self, other):
    
Traceback (most recent call last):
KeyboardInterrupt
Process Process-62:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'
Process Process-33:

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 9, in shared_cache_function
    with lock:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 1056, in __enter__
    return self._callmethod('acquire')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 818, in _callmethod
    self._connect()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 805, in _connect
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 920, in try_lr_module
    mod = RCGraph() @ RCGraph()
          ~~~~~~~~~~^~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 196, in __matmul__
    return RCGraphModule({self: 1}) @ RCGraphModule({other: 1})
           ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 170, in __matmul__
    return TensorModule(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 866, in __init__
    super().__init__(_dict, generic_key_type=generic_key_type, ring=TensorRing(*rings), _clone=False)
                                                                    ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/tensor_ring.py", line 44, in __init__
    self.zero_monom = tuple([self.rings[i].zero_monom for i in range(len(self.rings))])
                                                                         ^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/tensor_ring.py", line 50, in rings
    @property
    
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
sympy.polys.polyerrors.CoercionFailed: Not a domain element

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
Process Process-23:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 172, in mul
    dct = _sep_desc_mul(perm1, perm2, deg1, deg2, v1 * v2, self.schub_ring)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 35, in _sep_desc_mul
    bingo = ring.from_dict({perm * pmu1: coeff}) * ring.from_dict({perm2 * pmu2: S.One})
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 271, in mul
    other = self.domain_new(other)
            ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 222, in __str__
    return sstr(self)
           ^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 408, in __call__
    return self.__wrapped__(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 993, in sstr
    s = p.doprint(expr)
        ^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 308, in _print
    if self.printmethod and hasattr(expr, self.printmethod):
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-53:
Process Process-30:
Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
sympy.polys.polyerrors.CoercionFailed: Not a domain element

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 361, in ring_act
    wd_dict = elem.change_basis(WordBasis)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 252, in change_basis
    new_ring = FreeAlgebra(basis=other_basis)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 516, in __init__
    self.dtype = type("FreeAlgebraElement", (FreeAlgebraElement,), {"ring": self})
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-29:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 150, in mul
    bongus = self.domain_new(elem1)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 222, in __str__
    return sstr(self)
           ^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 408, in __call__
    return self.__wrapped__(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 993, in sstr
    s = p.doprint(expr)
        ^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 57, in _sympystr
    return printer._print_Add(sympy_Add(*self.as_ordered_terms()))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 58, in _print_Add
    t = self._print(term)
        ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/abstract_schub_poly.py", line 111, in _sympystr
    return printer.doprint(f"{self._prefix}S{self._genset}({printer.doprint(key)})")
                                                            ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 332, in _print
    return printmethod(expr, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 867, in _print_tuple
    return "(%s)" % self.stringify(expr, ", ")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in stringify
    return sep.join([self.parenthesize(item, level) for item in args])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in <listcomp>
    return sep.join([self.parenthesize(item, level) for item in args])
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 39, in parenthesize
    return self._print(item)
           ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 139, in _sympystr
    return printer.doprint(self._perm)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 330, in _print
    printmethod = getattr(self, printmethodname, None)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-34:
Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
sympy.polys.polyerrors.CoercionFailed: Not a domain element
Traceback (most recent call last):

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
           ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "symengine_wrapper.pyx", line 891, in symengine.lib.symengine_wrapper.Basic.__mul__
  File "symengine_wrapper.pyx", line 579, in symengine.lib.symengine_wrapper._sympify
  File "symengine_wrapper.pyx", line 290, in symengine.lib.symengine_wrapper.sympy2symengine
AttributeError: 'TensorModule' object has no attribute 'as_base_exp'
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 172, in mul
    dct = _sep_desc_mul(perm1, perm2, deg1, deg2, v1 * v2, self.schub_ring)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 35, in _sep_desc_mul
    bingo = ring.from_dict({perm * pmu1: coeff}) * ring.from_dict({perm2 * pmu2: S.One})
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 271, in mul
    other = self.domain_new(other)
            ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 222, in __str__
    return sstr(self)
           ^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 408, in __call__
    return self.__wrapped__(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 993, in sstr
    s = p.doprint(expr)
        ^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 57, in _sympystr
    return printer._print_Add(sympy_Add(*self.as_ordered_terms()))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 53, in _print_Add
    terms = self._as_ordered_terms(expr, order=order)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 350, in _as_ordered_terms
    return expr.as_ordered_terms(order=order)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 1190, in as_ordered_terms
    terms, gens = self.as_terms()
                  ^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 1220, in as_terms
    coeff = complex(coeff)
            ^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 379, in __complex__
    re, im = result.as_real_imag()
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 1978, in as_real_imag
    return (re(self), im(self))
            ^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/cache.py", line 72, in wrapper
    retval = cfunc(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/numbers.py", line 1131, in __hash__
    float_val = float(self)
                ^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/numbers.py", line 409, in __float__
    return mlib.to_float(self._as_mpf_val(53))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/.local/lib/python3.11/site-packages/mpmath/libmp/libmpf.py", line 454, in to_float
    def to_float(s, strict=False, rnd=round_fast):
    
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
Process Process-59:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 130, in __add__
    return self.ring.add(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 540, in add
    result = self.from_dict(add_perm_dict(elem, other))
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/utils/perm_utils.py", line 99, in add_perm_dict
    d_ret[k] = d_ret.get(k, 0) + v
    ~~~~~^^^
KeyboardInterrupt
Traceback (most recent call last):
Process Process-57:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 361, in ring_act
    wd_dict = elem.change_basis(WordBasis)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 256, in change_basis
    ret += v * new_ring.from_dict(tfunc(k))
           ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "symengine_wrapper.pyx", line 891, in symengine.lib.symengine_wrapper.Basic.__mul__
  File "symengine_wrapper.pyx", line 579, in symengine.lib.symengine_wrapper._sympify
  File "symengine_wrapper.pyx", line 290, in symengine.lib.symengine_wrapper.sympy2symengine
AttributeError: 'FreeAlgebraElement' object has no attribute 'as_base_exp'
Traceback (most recent call last):
Process Process-31:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 132, in __add__
    return self._addkeys(other)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 128, in _addkeys
    return self.clone(add_perm_dict(_value_dict(self.value_dict, keytype=self.keytype), _value_dict(other.value_dict, keytype=other.keytype)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 811, in clone
    return TensorModule(*args, generic_key_type=self._generic_key_type, ring=self._ring, _modules=self._modules, _clone=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 819, in __init__
    super().__init__(*args, generic_key_type=generic_key_type, ring=ring, _clone=False)
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 115, in __init__
    self._dict = _value_dict(start_dct, keytype=self.keytype)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 49, in _value_dict
    dct[keytype(k)] = v * k.value
        ^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 806, in keytype
    key = RCGraphTensor(*args, modules=self._modules)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 726, in __init__
    new_keys += [key._modules[i].keytype(key[i]) for i, k in enumerate(key)]
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 726, in <listcomp>
    new_keys += [key._modules[i].keytype(key[i]) for i, k in enumerate(key)]
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 446, in keytype
    return RCGraph(k, value=value)
           ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
Process Process-39:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 172, in mul
    dct = _sep_desc_mul(perm1, perm2, deg1, deg2, v1 * v2, self.schub_ring)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 35, in _sep_desc_mul
    bingo = ring.from_dict({perm * pmu1: coeff}) * ring.from_dict({perm2 * pmu2: S.One})
                                                                   ~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 225, in __mul__
    def __mul__(self, other):
    
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 132, in __add__
    return self._addkeys(other)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 128, in _addkeys
    return self.clone(add_perm_dict(_value_dict(self.value_dict, keytype=self.keytype), _value_dict(other.value_dict, keytype=other.keytype)))
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 49, in _value_dict
    dct[keytype(k)] = v * k.value
    ~~~^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 772, in __hash__
    return hash(self._keys)
           ^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 435, in __hash__
    def __hash__(self):
    
KeyboardInterrupt
Process Process-58:
Process Process-25:
Process Process-21:
Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
sympy.polys.polyerrors.CoercionFailed: Not a domain element
Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
Process Process-36:

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
sympy.polys.polyerrors.CoercionFailed: Not a domain element
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 271, in mul
    other = self.domain_new(other)
            ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
sympy.polys.polyerrors.CoercionFailed: Could not coerce Sx((3, 2, 1)) of type <class 'schubmult.rings.schubert_ring.DoubleSchubertElement'> to SingleSchubertRing

During handling of the above exception, another exception occurred:

Traceback (most recent call last):

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 271, in mul
    other = self.domain_new(other)
            ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
sympy.polys.polyerrors.CoercionFailed: Could not coerce Sx((6, 5, 4, 2, 1, 3)) of type <class 'schubmult.rings.schubert_ring.DoubleSchubertElement'> to SingleSchubertRing

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
Process Process-42:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 172, in mul
    dct = _sep_desc_mul(perm1, perm2, deg1, deg2, v1 * v2, self.schub_ring)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 35, in _sep_desc_mul
    bingo = ring.from_dict({perm * pmu1: coeff}) * ring.from_dict({perm2 * pmu2: S.One})
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 279, in mul
    return self.from_dict(_mul_schub_dicts(elem, other, elem.ring, other.ring))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_mul_utils.py", line 18, in _mul_schub_dicts
    this_dict = add_perm_dict(this_dict, {k1: v1 * to_mul for k1, v1 in basis1.cached_product(kd, k, basis2).items()})
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/schubert_ring.py", line 744, in cached_product
    return py.schubmult_py({u: S.One}, v)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/schub_lib/single.py", line 105, in schubmult_py
    vpathsums = {Permutation(u): {Permutation([1, 2]): val}}
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 222, in __hash__
    def __hash__(self):
    
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 172, in mul
    dct = _sep_desc_mul(perm1, perm2, deg1, deg2, v1 * v2, self.schub_ring)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 35, in _sep_desc_mul
    bingo = ring.from_dict({perm * pmu1: coeff}) * ring.from_dict({perm2 * pmu2: S.One})
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 279, in mul
    return self.from_dict(_mul_schub_dicts(elem, other, elem.ring, other.ring))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_mul_utils.py", line 18, in _mul_schub_dicts
    this_dict = add_perm_dict(this_dict, {k1: v1 * to_mul for k1, v1 in basis1.cached_product(kd, k, basis2).items()})
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/schubert_ring.py", line 744, in cached_product
    return py.schubmult_py({u: S.One}, v)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/schub_lib/single.py", line 111, in schubmult_py
    newperms = elem_sym_perms(
               ^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/schub_lib/schub_lib.py", line 596, in elem_sym_perms
    new_perm_add = up_perm.swap(i, j)
                   ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 204, in swap
    return Permutation(new_perm)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 49, in __new__
    return Permutation.__xnew_cached__(cls, tuple(perm))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 75, in __xnew_cached__
    return Permutation.__xnew__(_class, perm)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 86, in __xnew__
    cd = old_code(p)
         ^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/utils/perm_utils.py", line 136, in old_code
    itr = bisect_left(v, perm[i])
          ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
Process Process-56:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 132, in __add__
    return self._addkeys(other)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 128, in _addkeys
    return self.clone(add_perm_dict(_value_dict(self.value_dict, keytype=self.keytype), _value_dict(other.value_dict, keytype=other.keytype)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 811, in clone
    return TensorModule(*args, generic_key_type=self._generic_key_type, ring=self._ring, _modules=self._modules, _clone=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 819, in __init__
    super().__init__(*args, generic_key_type=generic_key_type, ring=ring, _clone=False)
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 115, in __init__
    self._dict = _value_dict(start_dct, keytype=self.keytype)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 49, in _value_dict
    dct[keytype(k)] = v * k.value
        ^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 806, in keytype
    key = RCGraphTensor(*args, modules=self._modules)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 726, in __init__
    new_keys += [key._modules[i].keytype(key[i]) for i, k in enumerate(key)]
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 726, in <listcomp>
    new_keys += [key._modules[i].keytype(key[i]) for i, k in enumerate(key)]
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 446, in keytype
    return RCGraph(k, value=value)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 238, in __new__
    return tuple.__new__(cls, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
sympy.polys.polyerrors.CoercionFailed: Not a domain element
Traceback (most recent call last):

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
sympy.polys.polyerrors.CoercionFailed: Not a domain element

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 150, in mul
    bongus = self.domain_new(elem1)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 222, in __str__
    return sstr(self)
           ^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 408, in __call__
    return self.__wrapped__(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 993, in sstr
    s = p.doprint(expr)
        ^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 57, in _sympystr
    return printer._print_Add(sympy_Add(*self.as_ordered_terms()))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 53, in _print_Add
    terms = self._as_ordered_terms(expr, order=order)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 350, in _as_ordered_terms
    return expr.as_ordered_terms(order=order)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 1190, in as_ordered_terms
    terms, gens = self.as_terms()
                  ^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 1220, in as_terms
    coeff = complex(coeff)
            ^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 380, in __complex__
    return complex(float(re), float(im))
                   ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/numbers.py", line 409, in __float__
    return mlib.to_float(self._as_mpf_val(53))
                         ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/numbers.py", line 967, in _as_mpf_val
    rv = mpf_norm(self._mpf_, prec)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/numbers.py", line 177, in mpf_norm
    rv = mpf_normalize(sign, MPZ(man), expt, bc, prec, rnd)
                             ^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
KeyboardInterrupt
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 157, in mul
    bongus = self.domain_new(elem2)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 222, in __str__
    return sstr(self)
           ^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 408, in __call__
    return self.__wrapped__(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 993, in sstr
    s = p.doprint(expr)
        ^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 57, in _sympystr
    return printer._print_Add(sympy_Add(*self.as_ordered_terms()))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 53, in _print_Add
    terms = self._as_ordered_terms(expr, order=order)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 350, in _as_ordered_terms
    return expr.as_ordered_terms(order=order)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 1193, in as_ordered_terms
    ordered = sorted(terms, key=key, reverse=reverse)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 1112, in key
    ncpart = tuple([e.sort_key(order=order) for e in ncpart])
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 1112, in <listcomp>
    ncpart = tuple([e.sort_key(order=order) for e in ncpart])
                    ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/cache.py", line 72, in wrapper
    retval = cfunc(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 168, in sort_key
    args = (str(expr),)
            ^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/_print_helpers.py", line 29, in __str__
    return sstr(self, order=None)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 408, in __call__
    return self.__wrapped__(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 993, in sstr
    s = p.doprint(expr)
        ^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/abstract_schub_poly.py", line 111, in _sympystr
    return printer.doprint(f"{self._prefix}S{self._genset}({printer.doprint(key)})")
                                                            ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
Process Process-45:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 332, in _print
    return printmethod(expr, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 867, in _print_tuple
    return "(%s)" % self.stringify(expr, ", ")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in stringify
    return sep.join([self.parenthesize(item, level) for item in args])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in <listcomp>
    return sep.join([self.parenthesize(item, level) for item in args])
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 39, in parenthesize
    return self._print(item)
           ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 136, in _sympystr
    def _sympystr(self, printer):
    
KeyboardInterrupt
Traceback (most recent call last):
Process Process-41:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 745, in ring_act
    ret = add_perm_dict(ret, TensorModule(value * modules[0], *modules[1:], ring=elem.ring).value_dict)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 866, in __init__
    super().__init__(_dict, generic_key_type=generic_key_type, ring=TensorRing(*rings), _clone=False)
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 115, in __init__
    self._dict = _value_dict(start_dct, keytype=self.keytype)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 49, in _value_dict
    dct[keytype(k)] = v * k.value
        ^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 806, in keytype
    key = RCGraphTensor(*args, modules=self._modules)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 726, in __init__
    new_keys += [key._modules[i].keytype(key[i]) for i, k in enumerate(key)]
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 726, in <listcomp>
    new_keys += [key._modules[i].keytype(key[i]) for i, k in enumerate(key)]
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 446, in keytype
    return RCGraph(k, value=value)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 238, in __new__
    return tuple.__new__(cls, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-17:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 745, in ring_act
    ret = add_perm_dict(ret, TensorModule(value * modules[0], *modules[1:], ring=elem.ring).value_dict)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 866, in __init__
    super().__init__(_dict, generic_key_type=generic_key_type, ring=TensorRing(*rings), _clone=False)
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 115, in __init__
    self._dict = _value_dict(start_dct, keytype=self.keytype)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 49, in _value_dict
    dct[keytype(k)] = v * k.value
        ^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 806, in keytype
    key = RCGraphTensor(*args, modules=self._modules)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 726, in __init__
    new_keys += [key._modules[i].keytype(key[i]) for i, k in enumerate(key)]
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 726, in <listcomp>
    new_keys += [key._modules[i].keytype(key[i]) for i, k in enumerate(key)]
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 446, in keytype
    return RCGraph(k, value=value)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 238, in __new__
    return tuple.__new__(cls, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 745, in ring_act
    ret = add_perm_dict(ret, TensorModule(value * modules[0], *modules[1:], ring=elem.ring).value_dict)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 855, in __init__
    new_key = RCGraphTensor(key1, key2, modules=new_modules[: i + 1])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 719, in __init__
    def __init__(self, *keys, modules=None, value=1):
    
KeyboardInterrupt
Process Process-43:
Process Process-48:
Process Process-46:
Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
sympy.polys.polyerrors.CoercionFailed: Not a domain element
Traceback (most recent call last):

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/assumptions.py", line 499, in getit
    return self._assumptions[fact]
           ~~~~~~~~~~~~~~~~~^^^^^^
KeyError: 'commutative'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
sympy.polys.polyerrors.CoercionFailed: Not a domain element
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 811, in clone
    return TensorModule(*args, generic_key_type=self._generic_key_type, ring=self._ring, _modules=self._modules, _clone=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 819, in __init__
    super().__init__(*args, generic_key_type=generic_key_type, ring=ring, _clone=False)
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 115, in __init__
    self._dict = _value_dict(start_dct, keytype=self.keytype)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 49, in _value_dict
    dct[keytype(k)] = v * k.value
        ^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 806, in keytype
    key = RCGraphTensor(*args, modules=self._modules)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 726, in __init__
    new_keys += [key._modules[i].keytype(key[i]) for i, k in enumerate(key)]
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 726, in <listcomp>
    new_keys += [key._modules[i].keytype(key[i]) for i, k in enumerate(key)]
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 446, in keytype
    return RCGraph(k, value=value)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 238, in __new__
    return tuple.__new__(cls, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 172, in mul
    dct = _sep_desc_mul(perm1, perm2, deg1, deg2, v1 * v2, self.schub_ring)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 35, in _sep_desc_mul
    bingo = ring.from_dict({perm * pmu1: coeff}) * ring.from_dict({perm2 * pmu2: S.One})
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 271, in mul
    other = self.domain_new(other)
            ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 222, in __str__
    return sstr(self)
           ^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 408, in __call__
    return self.__wrapped__(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 993, in sstr
    s = p.doprint(expr)
        ^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 57, in _sympystr
    return printer._print_Add(sympy_Add(*self.as_ordered_terms()))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 53, in _print_Add
    terms = self._as_ordered_terms(expr, order=order)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 350, in _as_ordered_terms
    return expr.as_ordered_terms(order=order)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 1190, in as_ordered_terms
    terms, gens = self.as_terms()
                  ^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 271, in mul
    other = self.domain_new(other)
            ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 1233, in as_terms
    if factor.is_commutative:
       ^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/assumptions.py", line 503, in getit
    return _ask(fact, self)
           ^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/assumptions.py", line 586, in _ask
    new_facts_to_check = list(_assume_rules.prereq[fact_i] - facts_queued)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
sympy.polys.polyerrors.CoercionFailed: Could not coerce Sx((5, 4, 2, 1, 3)) of type <class 'schubmult.rings.schubert_ring.DoubleSchubertElement'> to SingleSchubertRing

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 172, in mul
    dct = _sep_desc_mul(perm1, perm2, deg1, deg2, v1 * v2, self.schub_ring)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 35, in _sep_desc_mul
    bingo = ring.from_dict({perm * pmu1: coeff}) * ring.from_dict({perm2 * pmu2: S.One})
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 279, in mul
    return self.from_dict(_mul_schub_dicts(elem, other, elem.ring, other.ring))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_mul_utils.py", line 18, in _mul_schub_dicts
    this_dict = add_perm_dict(this_dict, {k1: v1 * to_mul for k1, v1 in basis1.cached_product(kd, k, basis2).items()})
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/schubert_ring.py", line 744, in cached_product
    return py.schubmult_py({u: S.One}, v)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/schub_lib/single.py", line 111, in schubmult_py
    newperms = elem_sym_perms(
               ^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/schub_lib/schub_lib.py", line 596, in elem_sym_perms
    new_perm_add = up_perm.swap(i, j)
                   ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 204, in swap
    return Permutation(new_perm)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 49, in __new__
    return Permutation.__xnew_cached__(cls, tuple(perm))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 75, in __xnew_cached__
    return Permutation.__xnew__(_class, perm)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 87, in __xnew__
    obj._unique_key = (len(p), sum([cd[i] * math.factorial(len(p) - 1 - i) for i in range(len(cd))]))
                                                                                    ^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-52:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 745, in ring_act
    ret = add_perm_dict(ret, TensorModule(value * modules[0], *modules[1:], ring=elem.ring).value_dict)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 866, in __init__
    super().__init__(_dict, generic_key_type=generic_key_type, ring=TensorRing(*rings), _clone=False)
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 115, in __init__
    self._dict = _value_dict(start_dct, keytype=self.keytype)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 49, in _value_dict
    dct[keytype(k)] = v * k.value
        ^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 806, in keytype
    key = RCGraphTensor(*args, modules=self._modules)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 726, in __init__
    new_keys += [key._modules[i].keytype(key[i]) for i, k in enumerate(key)]
                                                             ^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 781, in __iter__
    return iter(self._keys)
           ^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-49:
Process Process-44:
Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
sympy.polys.polyerrors.CoercionFailed: Not a domain element

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
Process Process-40:
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 331, in domain_new
    raise CoercionFailed("Not a domain element")
sympy.polys.polyerrors.CoercionFailed: Not a domain element
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 150, in mul
    bongus = self.domain_new(elem1)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

During handling of the above exception, another exception occurred:

  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 222, in __str__
    return sstr(self)
           ^^^^^^^^^^
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 408, in __call__
    return self.__wrapped__(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 993, in sstr
    s = p.doprint(expr)
        ^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 57, in _sympystr
    return printer._print_Add(sympy_Add(*self.as_ordered_terms()))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 58, in _print_Add
    t = self._print(term)
        ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/abstract_schub_poly.py", line 111, in _sympystr
    return printer.doprint(f"{self._prefix}S{self._genset}({printer.doprint(key)})")
                                                            ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 332, in _print
    return printmethod(expr, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 867, in _print_tuple
    return "(%s)" % self.stringify(expr, ", ")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in stringify
    return sep.join([self.parenthesize(item, level) for item in args])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in <listcomp>
    return sep.join([self.parenthesize(item, level) for item in args])
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 39, in parenthesize
    return self._print(item)
           ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 308, in _print
    if self.printmethod and hasattr(expr, self.printmethod):
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 13, in shared_cache_function
    result = try_lr_module(key)
             ^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 949, in try_lr_module
    for (rc1_bad, rc2_bad), cff2 in try_lr_module(key[0], length).items():
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 926, in try_lr_module
    lower_module1 = try_lr_module(lower_perm, length - 1)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 933, in try_lr_module
    ret_elem = ASx(uncode([perm.trimcode[0]]), 1).coproduct() * lower_module1
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 166, in __mul__
    return other.__rmul__(self)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 164, in __rmul__
    mod += v * self.clone(self.keytype(k).ring_act(other))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 744, in ring_act
    modules.append(self._modules[i].clone(dict.fromkeys(graph.ring_act(elem.ring.rings[i](*key)), 1)))
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 370, in ring_act
    acted_element2 = add_perm_dict(acted_element2, dict.fromkeys(k2.act(a), v2))
                                                                 ^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/rc_graph_module.py", line 381, in act
    bumpup = FAS(uncode([p]), 1) * elem
             ~~~~~~~~~~~~~~~~~~~~^~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 198, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra.py", line 566, in mul
    ret += self.from_dict(self._basis.product(k0, k, v * v0))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/free_algebra_basis.py", line 706, in product
    return dict(coeff * splugSx(*cls.as_key(key1)) * splugSx(*cls.as_key(key2)))
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 167, in __mul__
    return self.ring.mul(self, other)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/_separated_descents.py", line 150, in mul
    bongus = self.domain_new(elem1)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 336, in domain_new
    raise CoercionFailed(f"Could not coerce {element} of type {type(element)} to {self.__class__.__name__}")
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 222, in __str__
    return sstr(self)
           ^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 408, in __call__
    return self.__wrapped__(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 993, in sstr
    s = p.doprint(expr)
        ^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/base_schubert_ring.py", line 57, in _sympystr
    return printer._print_Add(sympy_Add(*self.as_ordered_terms()))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 53, in _print_Add
    terms = self._as_ordered_terms(expr, order=order)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 350, in _as_ordered_terms
    return expr.as_ordered_terms(order=order)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 1193, in as_ordered_terms
    ordered = sorted(terms, key=key, reverse=reverse)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 1112, in key
    ncpart = tuple([e.sort_key(order=order) for e in ncpart])
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 1112, in <listcomp>
    ncpart = tuple([e.sort_key(order=order) for e in ncpart])
                    ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/cache.py", line 72, in wrapper
    retval = cfunc(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/expr.py", line 168, in sort_key
    args = (str(expr),)
            ^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/core/_print_helpers.py", line 29, in __str__
    return sstr(self, order=None)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 408, in __call__
    return self.__wrapped__(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 993, in sstr
    s = p.doprint(expr)
        ^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/rings/abstract_schub_poly.py", line 111, in _sympystr
    return printer.doprint(f"{self._prefix}S{self._genset}({printer.doprint(key)})")
                                                            ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 332, in _print
    return printmethod(expr, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 867, in _print_tuple
    return "(%s)" % self.stringify(expr, ", ")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in stringify
    return sep.join([self.parenthesize(item, level) for item in args])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 42, in <listcomp>
    return sep.join([self.parenthesize(item, level) for item in args])
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 39, in parenthesize
    return self._print(item)
           ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 310, in _print
    return getattr(expr, self.printmethod)(self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/schubmult/perm_lib.py", line 139, in _sympystr
    return printer.doprint(self._perm)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 293, in doprint
    return self._str(self._print(expr))
                     ^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/printer.py", line 332, in _print
    return printmethod(expr, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 867, in _print_tuple
    return "(%s)" % self.stringify(expr, ", ")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/site-packages/sympy/printing/str.py", line 41, in stringify
    def stringify(self, args, sep, level=0):
    
KeyboardInterrupt
Process Process-121:
Process Process-51:
Process Process-120:
Process Process-119:
Process Process-117:
Process Process-116:
Process Process-114:
Process Process-118:
Process Process-102:
Process Process-113:
Process Process-104:
Process Process-101:
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
Process Process-112:
Process Process-111:
Process Process-103:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 774, in answer_challenge
    response = connection.recv_bytes(256)        # reject large message
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
Traceback (most recent call last):
Process Process-110:
Process Process-108:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Process Process-109:
Process Process-106:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-47:
Process Process-107:
Process Process-105:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Process Process-54:
Traceback (most recent call last):
Process Process-115:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 307, in _bootstrap
    self._after_fork()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 342, in _after_fork
    util._run_after_forkers()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 170, in _run_after_forkers
    func(obj)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 893, in _after_fork
    self._incref()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 850, in _incref
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
Process Process-99:
Process Process-93:
Process Process-90:
Process Process-88:
Process Process-97:
Process Process-91:
Process Process-95:
Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 63, in main
    p.join()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/popen_fork.py", line 43, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 67, in <module>
    main()
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 52, in main
    with Manager() as manager:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 657, in __exit__
Traceback (most recent call last):
    self.shutdown()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 227, in __call__
    res = self._callback(*self._args, **self._kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 668, in _finalize_manager
    conn = _Client(address, authkey=authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
      File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/context.py", line 228, in _after_fork
    return _default_context.get_context().Process._after_fork()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Process Process-96:
Process Process-98:
Process Process-92:
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
Process Process-94:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 9, in shared_cache_function
    with lock:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 1056, in __enter__
    return self._callmethod('acquire')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 818, in _callmethod
    self._connect()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 805, in _connect
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
Process Process-89:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 337, in _exit_function
    _run_finalizers(0)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 303, in _run_finalizers
    finalizer()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 227, in __call__
    res = self._callback(*self._args, **self._kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 874, in _decref
    conn = _Client(token.address, authkey=authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
Traceback (most recent call last):
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^

       AttributeError: 'ForkAwareLocal' object has no attribute 'connection'
     ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
Traceback (most recent call last):

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'
Process Process-100:

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 20, in worker
    try_mod = shared_cache_function(shared_dict, lock, perm)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/schubmult/src/fiddle_lr_rule.py", line 9, in shared_cache_function
    with lock:
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 1056, in __enter__
    return self._callmethod('acquire')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 818, in _callmethod
    self._connect()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 805, in _connect
    conn = self._Client(self._token.address, authkey=self._authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 337, in _exit_function
    _run_finalizers(0)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 303, in _run_finalizers
    finalizer()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 227, in __call__
    res = self._callback(*self._args, **self._kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 874, in _decref
    conn = _Client(token.address, authkey=authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
Traceback (most recent call last):
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 814, in _callmethod
    conn = self._tls.connection
           ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ForkAwareLocal' object has no attribute 'connection'
Exception ignored in atexit callback: <function _exit_function at 0x774f8bcaba60>
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 337, in _exit_function
    _run_finalizers(0)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 303, in _run_finalizers
    finalizer()
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/util.py", line 227, in __call__
    res = self._callback(*self._args, **self._kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/managers.py", line 874, in _decref
    conn = _Client(token.address, authkey=authkey)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 525, in Client
    answer_challenge(c, authkey)
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 769, in answer_challenge
    message = connection.recv_bytes(256)         # reject large message
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 430, in _recv_bytes
    buf = self._recv(4)
          ^^^^^^^^^^^^^
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 395, in _recv
    chunk = read(handle, remaining)
            ^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt: 
Exception ignored in: <function _ConnectionBase.__del__ at 0x774f8bce85e0>
Traceback (most recent call last):
  File "/home/matthematics/miniforge3/envs/sage/lib/python3.11/multiprocessing/connection.py", line 131, in __del__
    def __del__(self):

KeyboardInterrupt: 
