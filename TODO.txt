TODO:

inject variables
parser sage tests
more script tests (parabolic?)
PARABOLIC

# HARD POSITIVE ERRORS


DIV DIFF MAYBE NILHECKERING

# infinite parabolic rings

!!PERM tests!!
SCHUB tests

Switch off best effort positive
# Quantum correctness tests
Coerce tensor rings
document

DOCS

# perm actions
# PERMUTATION CALL check

free_symbols and sub
# sympy guardrails for GeneratingSet check


Convert poly permute monomial
Fast basis change
# Fix subs 

# Change vars breaks if not positive

Test if Poly technique is faster
Results: higher degree and/or fewer terms, poly faster

# Use symengine for everything possible
# Basis instead of generating set
# classical schubpoly
# basis generates basis change

# schubpoly_quantum is slow

more tests

subs faster, do better with dense product

# Key union?

# moderate work positive
# (positivity with just y's)

# Do quantum poly parabolic

Create single basis for classical

# For quantum, correctly expand polynomial even if there aren't enough variables

Parabolic classical if that's what we want

# Correct positive testing

# Convert parabolic if possible

# Faster Peterson-Woodward

# Quantum parabolic change basis

code display!!! !!!

SEM basis!!!
